version: '3.4'

services:
  basket.api:
    image: eshopai/basket.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Basket/Basket.API/Dockerfile
    depends_on:
      - basket.data
      - identity.api
      - rabbitmq

  ai.productrecommender.azureml.api:
    image: eshopai/ai.productrecommender.azureml.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductRecommender/AI.ProductRecommender.AzureML.API/Dockerfile    

  ai.productsearchimagebased.tensorflow.api:
    image: eshopai/ai.productsearchimagebased.tensorflow.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductSearchImageBased/AI.ProductSearchImageBased.TensorFlow.API/Dockerfile    

  ai.productsearchimagebased.azurecognitiveservices.api:
    image: eshopai/ai.productsearchimagebased.azurecognitiveservices.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/AI.ProductSearchImageBased/AI.ProductSearchImageBased.AzureCognitiveServices.API/Dockerfile    

  catalog.api:
    image: eshopai/catalog.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Catalog/Catalog.API/Dockerfile
    depends_on:
      - sql.data
      - nosql.data
      - rabbitmq

  bot.api:
    image: eshopai/bot.api-win:${TAG:-latest}
    build:
      context: .\src\Bots\Bot.API
      dockerfile: Dockerfile
    ports:
      - "5200:80"

  identity.api:
    image: eshopai/identity.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    depends_on:
      - sql.data

  ordering.api:
    image: eshopai/ordering.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.API/Dockerfile
    depends_on:
      - sql.data
      - rabbitmq

  ordering.backgroundtasks:
    image: eshop/ordering.backgroundtasks-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Ordering/Ordering.BackgroundTasks/Dockerfile    
    depends_on:
      - sql.data
      - rabbitmq

  marketing.api:
    image: eshopai/marketing.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Marketing/Marketing.API/Dockerfile    
    depends_on:
      - sql.data
      - nosql.data
      - identity.api
      - rabbitmq

  webmvc:
    image: eshopai/webmvc-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebSPA/Dockerfile
      context: .
      dockerfile: src/Web/WebMVC/Dockerfile
    depends_on:
      - catalog.api
      - ordering.api
      - identity.api
      - basket.api
      - marketing.api
      - ai.productrecommender.azureml.api
      - ai.productsearchimagebased.tensorflow.api
      - ai.productsearchimagebased.azurecognitiveservices.api

  
  webstatus:
    image: eshopai/webstatus-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Web/WebStatus/Dockerfile

  payment.api:
    image: eshopai/payment.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Payment/Payment.API/Dockerfile
    depends_on:
      - rabbitmq

  locations.api:
    image: eshopai/locations.api-win:${TAG:-latest}
    build:
      context: .
      dockerfile: src/Services/Location/Locations.API/Dockerfile
    depends_on:
      - nosql.data
      - rabbitmq

  sql.data:
    image: microsoft/mssql-server-windows-developer
    volumes:
      - ./mssql:c:\var\opt\bulk:RO

  nosql.data:
    image: mongo:windowsservercore

  basket.data:
    image: redis:nanoserver
    ports:
        - "6379:6379"

  rabbitmq:
    image: spring2/rabbitmq
    ports:
      - "15672:15672"    
      - "5672:5672"

networks:
  default:
    external:
      name: nat

